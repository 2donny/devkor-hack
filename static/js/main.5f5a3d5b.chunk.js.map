{"version":3,"sources":["components/Layout.tsx","components/auth/Login.tsx","styles/styles.ts","components/profile/ProfileLayout.tsx","components/profile/ProfileDetail.tsx","components/profile/ProfileOption.tsx","components/profile/ProfileMain.tsx","components/profile/Profile.tsx","components/call/CheckBoxRow.tsx","components/call/Call.tsx","components/call/WaitingModal.tsx","components/call/CallWatingRoom.tsx","components/Client.ts","components/auth/KakaoRedirect.tsx","components/query/GetChattingData.tsx","components/chat/SendChat.tsx","components/chat/DetailChat.tsx","components/chat/Chat.tsx","components/myprofile/MyProfile.tsx","App.tsx","index.tsx"],"names":["Layout","children","Container","Wrapper","window","location","pathname","FooterNavigation","NavigationList","to","color","height","width","styled","div","li","ul","Row","SImg","img","TitleBox","LoginBox","withRouter","history","src","token","onSuccess","props","console","log","profile","response","push","userId","id","gender","kakao_account","nickname","profile_image_url","onFail","alert","useLoginForm","style","background","border","padding","borderRadius","cursor","className","commonStyles","GlobalStyles","createGlobalStyle","reset","ProfileLayout","onNext","onPrev","isSubmiting","SNav","title","onClick","LoaderWrapper","loading","size","ConfirmBtn","nav","button","ProfileDetail","state","dispatch","STitle","Box","SInput","placeholder","value","job","onChange","e","type","payload","target","ExampleText","STextArea","bucketList","PageIndicator","input","textarea","p","ProfileOption","Indicator","talkingSubject","SSInput","bio","ProfileMain","ProfileImageWrapper","htmlFor","profileImg","files","__file","fileReader","FileReader","readAsDataURL","onload","result","display","onSubmit","preventDefault","required","name","univ","age","mbti","checked","intro","h1","label","reducer","action","profileFormData","Error","Profile","useLocation","useHistory","useState","step","setStep","isLoading","setisLoading","useReducer","undefined","useEffect","href","handleNext","components","length","axios","post","then","res","data","ok","error","catch","err","map","component","index","Fragment","CheckBoxRow","Label","RowBody","CheckCircle","LabelText","span","customStyles","content","top","left","right","bottom","marginRight","transform","minHeight","maxWidth","paddingBottom","filteringOptions","Call","isOpen","modalState","setModalState","filteredGender","setFilteredGender","closeModal","openModal","HowtoUse","STitleBox","MainBox","UpperBtn","BelowBtn","CautionBox","onRequestClose","contentLabel","ModalWrapper","Button","modalBackground","visible","opacity","hidden","WaitingModal","AnimatePresence","exitBeforeEnter","motion","variants","initial","animate","client","AgoraRTC","createClient","mode","codec","localStream","createStream","audio","video","CallWaitingRoom","waiting","setWaiting","finish","setFinish","minutes","setMinutes","seconds","setSeconds","curSec","setCurSec","totalSec","filter","countdown","setInterval","a","clearInterval","leave","unpublish","handleError","remoteContainer","document","getElementById","init","join","uid","play","publish","on","evt","subscribe","stream","streamId","String","getId","elementId","streamDiv","createElement","appendChild","addVideoStream","close","remoteDiv","parentNode","removeChild","removeVideoStream","onExit","axiosInstance","create","baseURL","KakaoRedirect","GetChattingData","setQuery","setChatUserImageList","setChatUserList","setChatList","useQuery","get","headers","rooms","SendChat","setSendChat","DetailChat","setOpenDetailChat","selectedUser","fromMe","messages","time","sendChat","el","idx","Chat","openDetailChat","query","chatUserList","chatList","setSelectedUser","MyProfile","App","path","exact","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider"],"mappings":"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","file":"static/js/main.5f5a3d5b.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { CallOutline } from 'react-ionicons';\nimport { MailUnreadOutline } from 'react-ionicons';\nimport { BodyOutline } from 'react-ionicons';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: Props) {\n  return (\n    <Container>\n      <Wrapper>\n        {children}\n        {window.location.pathname === ('/call' || '/chat') && (\n          <FooterNavigation>\n            <NavigationList>\n              <Link to=\"/call\">\n                <CallOutline color={'#000'} height=\"25px\" width=\"25px\" />\n                <p>7시</p>\n              </Link>\n            </NavigationList>\n            <NavigationList>\n              <Link to=\"/chat\">\n                <MailUnreadOutline color={'#000'} height=\"25px\" width=\"25px\" />\n                <p>쪽지함</p>\n              </Link>\n            </NavigationList>\n            <NavigationList>\n              <Link to=\"/my-profile\">\n                <BodyOutline color={'#000'} height=\"25px\" width=\"25px\" />\n                <p>마이페이지</p>\n              </Link>\n            </NavigationList>\n          </FooterNavigation>\n        )}\n      </Wrapper>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  max-width: 400px;\n  width: 100%;\n  border: 1px solid lightgray;\n`;\n\nconst NavigationList = styled.li`\n  display: flex;\n  padding: 24px;\n  font-size: 10px;\n  cursor: pointer;\n  p,\n  span {\n    text-align: center;\n  }\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nconst FooterNavigation = styled.ul`\n  position: fixed;\n  bottom: 0;\n  background-color: #fff;\n  border-top: solid 1px #e5e5e6;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  max-width: 400px;\n  width: 100%;\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\nimport KakaoLogin from 'react-kakao-login';\nimport { withRouter } from 'react-router-dom';\nimport { History } from 'history';\n\ninterface Props {\n  history: History;\n}\n\nconst APIKEY = '00e1c763b85e22f5a25c3c42845c6794';\n\nfunction Login({ history }: Props) {\n  const loginSuccess = (props: any) => {\n    console.log(props);\n    const { profile, response } = props;\n    console.log(props);\n    history.push('/auth/kakao', {\n      userId: profile?.id,\n      gender: profile?.kakao_account.gender,\n      nickname: profile?.kakao_account?.profile?.nickname,\n      profile_image_url: profile?.kakao_account?.profile?.profile_image_url,\n    });\n  };\n\n  return (\n    <Container>\n      <TitleBox>\n        <h1>8시에 만나는 고연대친구</h1>\n        <Row>\n          <h2>연고링</h2>\n          <SImg src=\"/man1.png\" />\n          <SImg src=\"/woman1.png\" />\n        </Row>\n      </TitleBox>\n      <LoginBox>\n        <p>간편하게 로그인하고 시작하기\u001e</p>\n        <KakaoLogin\n          token={APIKEY}\n          onSuccess={loginSuccess}\n          onFail={(response) => alert(response)}\n          useLoginForm\n          style={{\n            width: '100%',\n            background: 'rgb(255, 235, 0)',\n            border: 'none',\n            padding: '15px',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          <p className=\"kakaoText\">카카오 계정으로 로그인</p>\n        </KakaoLogin>\n      </LoginBox>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  min-height: 100vh;\n  padding: 0 2rem;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n`;\n\nexport const SImg = styled.img`\n  object-fit: conver;\n  width: 50px;\n  height: 50px;\n`;\n\nexport const TitleBox = styled.div`\n  margin: 2rem 0;\n  font-weight: 700;\n  h1 {\n    color: #929da9;\n    font-size: 21px;\n  }\n  h2 {\n    color: #3a3c3f;\n    font-size: 48px;\n    margin: 1rem 0;\n  }\n`;\n\nconst LoginBox = styled.div`\n  padding-bottom: 50px;\n  p {\n    color: gray;\n    text-align: center;\n    font-size: 12px;\n    margin: 10px 0;\n  }\n  .kakaoText {\n    color: black;\n    font-size: 16px;\n    font-weight: 600;\n    margin: 0;\n  }\n`;\n\nexport default withRouter(Login);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nexport const commonStyles = {\n  accent: '#25D482',\n};\n\nexport const GlobalStyles = createGlobalStyle`\n    ${reset}\n    p {\n      margin: 0;\n      padding: 0;\n    }\n`;\n","import styled, { css } from 'styled-components';\nimport { ArrowBackOutline } from 'react-ionicons';\nimport { commonStyles } from '../../styles/styles';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\ninterface Props {\n  children: React.ReactNode;\n  onNext: () => void;\n  onPrev: () => void;\n  isSubmiting: boolean;\n}\n\nexport default function ProfileLayout({\n  children,\n  onNext,\n  onPrev,\n  isSubmiting,\n}: Props) {\n  return (\n    <Container>\n      <SNav>\n        <ArrowBackOutline\n          color={'#00000'}\n          title={'뒤로가기'}\n          height=\"25px\"\n          width=\"25px\"\n          onClick={onPrev}\n          style={{\n            cursor: 'pointer',\n          }}\n        />\n        <LoaderWrapper>\n          <ClipLoader\n            loading={isSubmiting}\n            color={commonStyles.accent}\n            size={30}\n          />\n        </LoaderWrapper>\n        <ConfirmBtn onClick={onNext}>확인</ConfirmBtn>\n      </SNav>\n      <main>{children}</main>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n  padding: 1.5rem;\n`;\n\nexport const SNav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst LoaderWrapper = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 45%;\n  transform: translate(-50%, -50%);\n`;\n\nconst ConfirmBtn = styled.button`\n  background: ${commonStyles.accent};\n  color: white;\n  font-weight: bold;\n  border: none;\n  padding: 0 1.5rem;\n  border-radius: 5px;\n  box-shadow: 0 4px 20px 0 rgb(0 0 0 / 10%), 0 2px 4px 0 rgb(0 0 0 / 10%);\n  cursor: pointer;\n  &:active {\n    opacity: 0.5;\n  }\n`;\n","import styled from 'styled-components';\nimport { Container, STitle } from './ProfileMain';\nimport { PageIndicator } from './ProfileOption';\nimport { ProfileState, ProfileAction } from './types';\n\ninterface Props {\n  title: string;\n  state: ProfileState;\n  dispatch: React.Dispatch<ProfileAction>;\n}\n\nexport default function ProfileDetail({ title, state, dispatch }: Props) {\n  console.log('rendered!');\n  return (\n    <Container>\n      <STitle>{title}</STitle>\n      <Box>\n        <SInput\n          placeholder=\"입력하기\"\n          value={state.job}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            dispatch({ type: 'setJob', payload: e.target.value })\n          }\n        />\n        <ExampleText style={{ color: '#aaa' }}>\n          예시 =&gt; 졸업생/ 취업준비생/새내기/ 대학원생 /문과대생\n          /공대생/미대생/의대생/음대생/ 마케터 준비생\n          /디자이너/ceo/백수/기획자/개발자/프리랜서/운동선수/변호사/ vc / pm\n          등등\n        </ExampleText>\n      </Box>\n      <Box>\n        <STitle>목표/버킷리스트</STitle>\n        <STextArea\n          placeholder=\"ex) &#13;&#10; 1. 1 년 안에 실리콘벨리가기 &#13;&#10; 2. 방학때 코딩 마스터&#13;&#10; 3. 미라클 모닝 &#13;&#10; 4. 사랑니빼기 &#13;&#10;\"\n          value={state.bucketList}\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n            dispatch({ type: 'setBucketList', payload: e.target.value })\n          }\n        />\n      </Box>\n      <PageIndicator>1/2페이지</PageIndicator>\n    </Container>\n  );\n}\n\nexport const Box = styled.div`\n  margin: 3.25rem 0;\n  & + & {\n    margin-top: 80px;\n  }\n`;\n\nexport const SInput = styled.input`\n  width: 80%;\n  padding: 16px;\n  border: 1px solid #e1e3e6;\n  border-radius: 8px;\n  font-size: 16px;\n  &::placeholder {\n    color: #c4cbd8;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const STextArea = styled.textarea`\n  width: 90%;\n  min-height: 8rem;\n  padding: 16px;\n  border: 1px solid #e1e3e6;\n  border-radius: 8px;\n  font-size: 16px;\n  &::placeholder {\n    color: #c4cbd8;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ExampleText = styled.p`\n  color: #c4cbd8;\n  font-size: 14px;\n  line-height: 18px;\n  margin: 1.25rem 0;\n`;\n","import styled from 'styled-components';\nimport { STitle } from './ProfileMain';\nimport { ProfileState, ProfileAction } from './types';\nimport { SInput, ExampleText, Box } from './ProfileDetail';\n\ninterface Props {\n  title: string;\n  state: ProfileState;\n  dispatch: React.Dispatch<ProfileAction>;\n}\n\nexport default function ProfileOption({ title, state, dispatch }: Props) {\n  return (\n    <Container>\n      <STitle>{title}</STitle>\n      <Box>\n        <Indicator>관심사나 대화하고 싶은 주제를 적어주세요! </Indicator>\n        <SInput\n          placeholder=\"입력하기\"\n          value={state.talkingSubject}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            dispatch({ type: 'setTalkingSubject', payload: e.target.value })\n          }\n        />\n        <ExampleText style={{ color: '#aaa' }}>\n          #스타트업#맛집탐방 #친구만들기 #외국어\n          #봉사활동#반려동물#코딩#대학원#여행#패션#연애#계절학기#취업#게임#음악#다이어트#운동#알바#과제#자기계발#우주#치맥#수다#비트코인#영화\n          등등\n        </ExampleText>\n      </Box>\n      <Box>\n        <Indicator>활동이력을 적고 관련 친구들을 만나보세요.</Indicator>\n        <SSInput\n          value={state.bio}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            dispatch({ type: 'setBio', payload: e.target.value })\n          }\n          placeholder=\"전공/근무회사/가입한 동아리/학회 활동 등등\"\n        />\n        <PageIndicator>2/2페이지</PageIndicator>\n      </Box>\n    </Container>\n  );\n}\n\nconst Container = styled.div``;\n\nconst Indicator = styled.p`\n  color: #404d61;\n  font-size: 16p;\n  line-height: 24px;\n  margin: 10px 0 5px;\n`;\n\nconst SSInput = styled(SInput)`\n  border: none;\n  padding-left: 0px;\n`;\n\nexport const PageIndicator = styled.p`\n  color: #a7b0c0;\n  text-align: right;\n  font-size: 14px;\n  line-height: 24px;\n`;\n","import { MouseEvent } from 'react';\nimport styled from 'styled-components';\nimport { ProfileAction, ProfileState } from './types';\nimport './ProfileMain.css';\nimport { PageIndicator } from './ProfileOption';\n\ninterface Props {\n  title: string;\n  state: ProfileState;\n  dispatch: React.Dispatch<ProfileAction>;\n  onNext: () => void;\n}\n\nexport default function ProfileMain({ title, state, dispatch, onNext }: Props) {\n  const handleFileOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return null;\n\n    const files = e.target.files;\n    const __file = files[0];\n    const __size = files[0]?.size;\n\n    if (__size > 10000000) {\n      return alert(\n        '사진 최대 용량을 초과했습니다. 사진 용량은 최대 10MB입니다. ',\n      );\n    }\n\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(__file);\n    fileReader.onload = (e) => {\n      console.log(e.target?.result);\n      dispatch({ type: 'setProfileImg', payload: e.target!.result as string });\n    };\n    dispatch({ type: 'setProfileFormData', payload: __file });\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onNext();\n  };\n\n  return (\n    <Container>\n      <STitle>{title}</STitle>\n      <ProfileImageWrapper htmlFor=\"input-file\">\n        <img src={state.profileImg ? state.profileImg : '/unknown.png'} />\n        <p className=\"green\">프로필사진 업로드하기</p>\n        <p className=\"gray\">\n          자신의 개성을 나타낼 수 있는 사진으로 업로드해주세요 :D 안심하세요!\n          프로필 사진은 통화가 종료된 후에 공개되어요.\n        </p>\n      </ProfileImageWrapper>\n      <input\n        id=\"input-file\"\n        type=\"file\"\n        onChange={handleFileOnChange}\n        style={{ display: 'none' }}\n      />\n\n      {/* 정재형 코드 */}\n      <form onSubmit={onSubmit}>\n        <input\n          className=\"name\"\n          type=\"text\"\n          required\n          placeholder=\"이름을 적어주세요.\"\n          value={state.name}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            dispatch({ type: 'setName', payload: e.target.value })\n          }\n        />\n        <br />\n\n        <select\n          className=\"univ\"\n          name=\"univ\"\n          value={state.univ}\n          onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n            dispatch({ type: 'setUniv', payload: e.target.value })\n          }\n          required\n        >\n          <option>학교를 선택해주세요.</option>\n          <option>고려대</option>\n          <option>서울대</option>\n          <option>연세대</option>\n        </select>\n\n        <div className=\"three\">\n          <input\n            type=\"text\"\n            className=\"age\"\n            value={state.age}\n            placeholder=\"나이를 입력해주세요\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              dispatch({ type: 'setAge', payload: e.target.value })\n            }\n            required\n          />\n          <br />\n\n          <div className=\"agetext\">\n            부담가지지 마세요~ 나이는 20초 20중 20후 30초 방식으로 표기가 되요!\n          </div>\n\n          <select\n            className=\"mbti\"\n            name=\"mbti\"\n            value={state.mbti}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              dispatch({ type: 'setMbti', payload: e.target.value })\n            }\n            required\n          >\n            <option value=\"\">MBTI를 선택해주세요.</option>\n            <option>ISTJ</option>\n            <option>ISFJ</option>\n            <option>INFJ</option>\n            <option>INTJ</option>\n            <option>ISTP</option>\n            <option>ISFP</option>\n            <option>INFP</option>\n            <option>INTP</option>\n            <option>ESTP</option>\n            <option>ESFP</option>\n            <option>ENFP</option>\n            <option>ENTP</option>\n            <option>ESTJ</option>\n            <option>ESFJ</option>\n            <option>ENFJ</option>\n            <option>ENTJ</option>\n          </select>\n\n          <select\n            className=\"area\"\n            name=\"area\"\n            value={state.location}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              dispatch({ type: 'setLocation', payload: e.target.value })\n            }\n            required\n          >\n            <option value=\"\">지역을 선택해주세요.</option>\n            <option>서울</option>\n            <option>경기 분당 수원권</option>\n            <option>경기 안양 과천 부천권</option>\n            <option>경기 구리 남양주 하남권</option>\n            <option>경기 의정부 파주 고양권</option>\n            <option>인천</option>\n            <option>대전</option>\n            <option>충북</option>\n            <option>충남</option>\n            <option>강원</option>\n            <option>부산</option>\n            <option>경북</option>\n            <option>경남</option>\n            <option>대구</option>\n            <option>울산</option>\n            <option>광주</option>\n            <option>전북</option>\n            <option>전남</option>\n            <option>제주</option>\n          </select>\n        </div>\n\n        <div className=\"gender\">\n          <div className=\"gendertext\">성별을 선택해주세요</div>\n          <div>\n            <span>\n              <input\n                type=\"radio\"\n                name=\"gender\"\n                checked={state.gender === 'male'}\n                onChange={() =>\n                  dispatch({ type: 'setGender', payload: 'male' })\n                }\n                required\n              ></input>\n              남\n              <input\n                type=\"radio\"\n                name=\"gender\"\n                checked={state.gender === 'female'}\n                onChange={() =>\n                  dispatch({ type: 'setGender', payload: 'female' })\n                }\n              ></input>\n              여\n            </span>\n          </div>\n        </div>\n\n        <div className=\"texttext\">개성있는 자기소개!</div>\n        <textarea\n          className=\"text\"\n          value={state.intro}\n          placeholder=\"tip. 어떤 친구와 대화하고 싶은지 적어두면 더 좋아요! &#10;예시) 미대에 다니는 다양한 삶을 살고싶어하는 미개봉화석^^&#10;요즘 스타트업에 관심이 생겨서 관련하신 분들과 이야기하면 좋을 것 같아용 ㅎㅎ\"\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n            dispatch({ type: 'setIntro', payload: e.target.value })\n          }\n          required\n        />\n        <br />\n\n        <button className=\"btn\" type=\"submit\">\n          확인\n        </button>\n      </form>\n      <PageIndicator>1/2페이지</PageIndicator>\n    </Container>\n  );\n}\n\nexport const Container = styled.div``;\n\nexport const STitle = styled.h1`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 32px;\n  margin: 2.5rem 0;\n`;\n\nconst ProfileImageWrapper = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 1.5rem 0;\n  text-align: center;\n  cursor: pointer;\n  .green {\n    color: #25d482;\n    font-size: 13px;\n    font-weight: 700;\n  }\n  .gray {\n    color: #929da9;\n    font-size: 10px;\n    font-weight: 500;\n    padding: 0 30px;\n    margin: 10px 0;\n    line-height: 12px;\n  }\n  img {\n    width: 100px;\n    height: 100px;\n    margin: 20px 0 15px;\n    object-fit: cover;\n    border-radius: 50%;\n    cursor: pointer;\n  }\n`;\n","import React, { useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport ProfileLayout from './ProfileLayout';\nimport ProfileMain from './ProfileMain';\nimport ProfileDetail from './ProfileDetail';\nimport ProfileOption from './ProfileOption';\nimport { LoginResponse, ProfileAction, ProfileState } from './types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ProfileLocationState } from '../auth/types';\nimport axios from 'axios';\nimport { JoinResponse } from './types.d';\n\nfunction reducer(state: ProfileState, action: ProfileAction): ProfileState {\n  switch (action.type) {\n    case 'setUserId':\n      return {\n        ...state,\n        userId: action.payload,\n      };\n    case 'setProfileFormData':\n      return {\n        ...state,\n        profileFormData: action.payload,\n      };\n    case 'setProfileImg':\n      return {\n        ...state,\n        profileImg: action.payload,\n      };\n    case 'setName':\n      return {\n        ...state,\n        name: action.payload,\n      };\n    case 'setUniv':\n      return {\n        ...state,\n        univ: action.payload,\n      };\n    case 'setAge':\n      return {\n        ...state,\n        age: action.payload,\n      };\n    case 'setMbti':\n      return {\n        ...state,\n        mbti: action.payload,\n      };\n    case 'setLocation':\n      return {\n        ...state,\n        location: action.payload,\n      };\n    case 'setGender':\n      return {\n        ...state,\n        gender: action.payload,\n      };\n    case 'setIntro':\n      return {\n        ...state,\n        intro: action.payload,\n      };\n    case 'setJob':\n      return {\n        ...state,\n        job: action.payload,\n      };\n    case 'setBucketList':\n      return {\n        ...state,\n        bucketList: action.payload,\n      };\n    case 'setTalkingSubject':\n      return {\n        ...state,\n        talkingSubject: action.payload,\n      };\n    case 'setBio':\n      return {\n        ...state,\n        bio: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nexport default function Profile() {\n  const location = useLocation<ProfileLocationState>();\n  const history = useHistory();\n  const [step, setStep] = useState(0);\n  const [isLoading, setisLoading] = useState(false);\n  const [state, dispatch] = useReducer(reducer, {\n    userId: undefined,\n    profileFormData: undefined,\n    profileImg: '',\n    name: '',\n    univ: '',\n    age: '',\n    mbti: '',\n    location: '',\n    gender: '',\n    intro: '',\n    job: '',\n    bucketList: '',\n    talkingSubject: '',\n    bio: '',\n  });\n\n  useEffect(() => {\n    const { userId, gender, nickname, profile_image_url } = location.state;\n    if (!userId) window.location.href = '/';\n    dispatch({ type: 'setUserId', payload: userId });\n    dispatch({ type: 'setGender', payload: gender || '' });\n    dispatch({ type: 'setName', payload: nickname || '' });\n    dispatch({ type: 'setProfileImg', payload: profile_image_url || '' });\n  }, []);\n\n  const handleNext = () => {\n    if (step + 1 === components.length) {\n      console.log('axios'); // http request, redirect\n      setisLoading(true);\n      const {\n        userId,\n        age,\n        bio,\n        bucketList,\n        gender,\n        intro,\n        job,\n        location,\n        mbti,\n        name,\n        profileImg,\n        talkingSubject,\n        univ,\n      } = state;\n\n      axios\n        .post<JoinResponse>('http://localhost:80/user/join', {\n          userId,\n          age,\n          bio,\n          bucketList,\n          gender,\n          intro,\n          job,\n          location,\n          mbti,\n          name,\n          profileImg,\n          talkingSubject,\n          univ,\n        })\n        .then((res) => {\n          console.log(res.data);\n          setisLoading(false);\n          if (res.data.ok) {\n            history.push('/call');\n          } else return alert(res.data.error);\n        })\n        .catch((err) => {\n          console.log(err);\n          return alert(err);\n        });\n    } else {\n      setStep((step: number) => step + 1);\n    }\n  };\n\n  const prevStep = () => {\n    if (step === 0) history.push('/');\n    setStep((step: number) => step - 1);\n  };\n\n  const components = [\n    <ProfileMain\n      onNext={handleNext}\n      title=\"프로필 만들기\"\n      state={state}\n      dispatch={dispatch}\n    />,\n    <ProfileDetail\n      title=\"마지막! 어떤 사람인가요?\"\n      state={state}\n      dispatch={dispatch}\n    />,\n    <ProfileOption title=\"선택사항\" state={state} dispatch={dispatch} />,\n  ];\n\n  return (\n    <ProfileLayout\n      isSubmiting={isLoading}\n      onNext={handleNext}\n      onPrev={prevStep}\n    >\n      {components.map((component, index) => {\n        if (step === index)\n          return <React.Fragment key={index}>{component}</React.Fragment>;\n        return null;\n      })}\n    </ProfileLayout>\n  );\n}\n","import styled from 'styled-components';\nimport { CheckmarkOutline } from 'react-ionicons';\n\ninterface Props {\n  label: string;\n  checked: boolean | null;\n  onClick: (label: string) => void;\n}\n\nexport default function CheckBoxRow({ label, checked, onClick }: Props) {\n  return (\n    <Label onClick={() => onClick(label)} htmlFor={label}>\n      <RowBody>\n        <CheckCircle checked={checked}>\n          <CheckmarkOutline color={'#00000'} height=\"25px\" width=\"25px\" />\n        </CheckCircle>\n\n        <LabelText>{label}</LabelText>\n      </RowBody>\n    </Label>\n  );\n}\n\nconst Label = styled.label`\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  cursor: pointer;\n`;\n\nconst RowBody = styled.span`\n  display: flex;\n`;\n\nconst CheckCircle = styled.div<{ checked: boolean | null }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  margin: 0 10px 15px 30px;\n  font-size: 18px;\n  border-radius: 12px;\n  border: 1px solid #25d482;\n  color: ${(props) => (props.checked ? '#fff' : '#25d482')};\n  background-color: ${(props) => props.checked && '#25d482'};\n`;\n\nconst LabelText = styled.span`\n  line-height: 24px;\n  margin: 0 5px;\n  word-break: keep-all;\n  overflow-wrap: break-word;\n`;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { TitleBox, Row, SImg } from '../auth/Login';\nimport { commonStyles } from '../../styles/styles';\nimport Modal from 'react-modal';\nimport { ArrowBackOutline } from 'react-ionicons';\nimport { SNav } from '../profile/ProfileLayout';\nimport CheckBoxRow from './CheckBoxRow';\nimport { useHistory } from 'react-router-dom';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    borderRadius: '15px',\n    minHeight: '30vh',\n    width: '70%',\n    maxWidth: '335px',\n    paddingBottom: '30px',\n  },\n};\n\nconst filteringOptions = ['여성', '남자', '둘다'];\n\nexport default function Call() {\n  const history = useHistory();\n  const [modalState, setModalState] = useState({\n    isOpen: false,\n    type: '',\n  });\n  const [filteredGender, setFilteredGender] = useState('여성');\n\n  const closeModal = () => {\n    setModalState({\n      ...modalState,\n      isOpen: false,\n    });\n  };\n\n  const openModal = (type: 'question' | 'filtering') => {\n    setModalState({\n      isOpen: true,\n      type,\n    });\n  };\n\n  return (\n    <Container>\n      <HowtoUse onClick={() => openModal('question')}>\n        사용 방법/문의하기\n      </HowtoUse>\n      <Wrapper>\n        <STitleBox>\n          <h1>8시에 만나는 고연대친구</h1>\n          <Row>\n            <h2>통화링</h2>\n            <SImg src=\"/man1.png\" />\n            <SImg src=\"/woman1.png\" />\n          </Row>\n        </STitleBox>\n        <MainBox>\n          <UpperBtn onClick={() => openModal('filtering')}>\n            필터링 설정하기\n          </UpperBtn>\n          <BelowBtn\n            onClick={() =>\n              history.push('/call/waiting', {\n                filteredGender,\n              })\n            }\n          >\n            친구들과 통화하기\n          </BelowBtn>\n        </MainBox>\n        <CautionBox>\n          <h3>주의사항 ✅ </h3>\n          <p>1. 꼭!! 크롬으로 접속해주셔야해요!</p>\n          <p>\n            2. 통화하기를 누른 후 ‘마이크 허용’을 해주셔야 통화를 즐길 수\n            있어요!\n          </p>\n        </CautionBox>\n      </Wrapper>\n      <Modal\n        isOpen={modalState.isOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Filtering Modal\"\n      >\n        {modalState.type === 'filtering' ? (\n          <>\n            <SNav>\n              <ArrowBackOutline\n                color={'#00000'}\n                title={'뒤로가기'}\n                height=\"25px\"\n                width=\"25px\"\n                onClick={closeModal}\n                style={{\n                  cursor: 'pointer',\n                }}\n              />\n              <span\n                style={{ cursor: 'pointer', color: commonStyles.accent }}\n                onClick={closeModal}\n              >\n                확인\n              </span>\n            </SNav>\n            <ModalWrapper>\n              <h3>상대방의 성별을 선택해주세요</h3>\n              <p>성별을 적용하는 경우 통화연결이 지연될 수 있어요!</p>\n              {filteringOptions.map((value, index) => (\n                <CheckBoxRow\n                  key={index}\n                  label={value}\n                  checked={filteredGender === value}\n                  onClick={(value) => {\n                    setFilteredGender(value);\n                  }}\n                />\n              ))}\n            </ModalWrapper>\n          </>\n        ) : (\n          <ModalWrapper>\n            <h3 className=\"green\">&lt; 연고링 사용방법 &gt; </h3>\n            <p className=\"green\">\n              오후 8시부터 새벽 2시까지만 연고링 통화서비스가 열려요! ※ 쪽지는\n              시간제약 없이 24시간동안 보낼 수 있어요 랜덤 매칭으로 친구들과 7분\n              동안 보이스톡 즐길 수 있어요. 친구와 통화를 할수록 친구의 정보를\n              확인할 수 있어요 :D 3. 통화가 끝나면 친구 신청을 보내고 쪽지로 더\n              친해져 보세요!\n            </p>\n            <BelowBtn>서비스 더 자세히 알아보기</BelowBtn>\n          </ModalWrapper>\n        )}\n      </Modal>\n    </Container>\n  );\n}\nconst Container = styled.div`\n  padding: 1.5rem;\n`;\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  margin-top: 6.5rem;\n`;\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .green {\n    color: #25d482;\n    line-height: 18px;\n  }\n  .green p {\n    font-size: 11px;\n  }\n  h3 {\n    font-weight: 700;\n    font-size: 17px;\n    line-height: 28px;\n    margin: 10px 0;\n  }\n  p {\n    color: #929da9;\n    font-size: 12px;\n    line-height: 15px;\n    margin: 25px 0;\n  }\n`;\n\nconst MainBox = styled.div`\n  margin-top: 8.5rem;\n`;\n\nconst STitleBox = styled(TitleBox)`\n  margin: 0;\n`;\n\nconst HowtoUse = styled.span`\n  color: #929da9;\n  line-height: 28px;\n  float: right;\n  cursor: pointer;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 18px 22px;\n  border-radius: 8px;\n  outline: none;\n  font-weight: 700;\n  font-size: 18px;\n  cursor: pointer;\n  box-shadow: 0 4px 20px 0 rgb(0 0 0 / 10%), 0 2px 4px 0 rgb(0 0 0 / 10%);\n  & + & {\n    margin: 20px 0;\n  }\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nconst UpperBtn = styled(Button)`\n  background-color: #fff;\n  border: 1px solid ${commonStyles.accent};\n  color: ${commonStyles.accent};\n`;\n\nconst BelowBtn = styled(Button)`\n  color: #fff;\n  border: 1px solid ${commonStyles.accent};\n  background-color: ${commonStyles.accent};\n`;\n\nconst CautionBox = styled.div`\n  background-color: #d5fcea;\n  border-radius: 8px;\n  color: #25d482;\n  font-size: 12px;\n  padding: 20px;\n  margin-top: 15px;\n  h3 {\n    font-weight: 700;\n    margin-bottom: 10px;\n  }\n  p {\n    line-height: 17px;\n  }\n`;\n","import React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { IoCall } from 'react-icons/io5';\nimport './WaitingModal.css';\nimport { useHistory } from 'react-router-dom';\n\nconst modalBackground = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n};\n\nconst style = {\n  background: '#333333',\n  color: 'white',\n};\n\nconst WaitingModal = () => {\n  const history = useHistory();\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      <motion.div\n        className=\"waitingModalBackground\"\n        variants={modalBackground}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <div className=\"waitingModalContainer\">\n          <button\n            className=\"waitingModalHeader\"\n            onClick={() => (window.location.href = '/call')}\n          >\n            <AiOutlineArrowLeft size=\"15\" color=\"black\" />\n          </button>\n          <div className=\"waitingModalBody\">\n            <div className=\"waitingModalTitle\">8시에 만나는 연고대친구</div>\n            <div className=\"waitingModalContent\">통화 연결중...</div>\n            <div className=\"waitingModalEllipse4\" />\n            <div className=\"waitingModalEllipse3\" />\n            <div className=\"waitingModalEllipse2\" />\n            <div className=\"waitingModalEllipse1\">\n              <IoCall className=\"waitingModalCall\" size=\"33\" />\n            </div>\n          </div>\n          <div className=\"waitingModalFooter\">\n            연고링 이용 tip 통화나 채팅시 상대방을 존중해주세요. 연고링은 데이팅\n            서비스가 아닙니다! 부담스러운 요구는 no no ! 코로나로 대학친구와의\n            교류가 없는 상황이 안타까워서 만든 서비스로 현재 아무런 이익\n            목적없이 운영이 되고 있어요. 많은 피드백 부탁드리겠습니다 ~ :)\n            소문도 많이 내주실꺼죵? ㅎㅎ\n          </div>\n        </div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default WaitingModal;\n","import React from 'react';\nimport AgoraRTC from 'agora-rtc-sdk';\nimport { useEffect, useState } from 'react';\n// import { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { IoCall } from 'react-icons/io5';\nimport WaitingModal from './WaitingModal';\nimport './CallWaitingRoom.css';\nimport { useHistory } from 'react-router-dom';\n\nconst client = AgoraRTC.createClient({\n  mode: 'rtc',\n  codec: 'vp8',\n});\n\nconst localStream = AgoraRTC.createStream({\n  audio: true,\n  video: false,\n});\n\nconst CallWaitingRoom = () => {\n  const [waiting, setWaiting] = useState(true);\n  const [finish, setFinish] = useState(false);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(10);\n  const [curSec, setCurSec] = useState(0);\n  const totalSec = 60 * minutes + seconds;\n  // console.log(\"secsec\", totalSec);\n  let style = { filter: `blur(${60 * minutes + seconds}px)` };\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (waiting === false) {\n      const countdown = setInterval(async () => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n          setCurSec(curSec + 1);\n          // console.log(\"secsec1\", curSec);\n        }\n        if (seconds === 0) {\n          if (minutes === 0) {\n            clearInterval(countdown);\n            setFinish(true);\n            await client.leave();\n            client.unpublish(localStream);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        }\n      }, 1000);\n      return () => {\n        clearInterval(countdown);\n      };\n    }\n  }, [waiting, minutes, seconds]);\n\n  useEffect(() => {\n    // Handle errors.\n    let handleError = function (err: any) {\n      console.log('Error: ', err);\n    };\n\n    // Remove the video stream from the container.\n    function removeVideoStream(elementId: any) {\n      let remoteDiv = document.getElementById(elementId);\n      if (remoteDiv) remoteDiv?.parentNode?.removeChild(remoteDiv);\n    }\n\n    // Query the container to which the remote stream belong.\n    let remoteContainer = document.getElementById('remote-container');\n\n    // Add video streams to the container.\n    function addVideoStream(elementId: any) {\n      // console.log(\"kyung\", \"addVideoStream\");\n      // Creates a new div for every stream\n      let streamDiv = document.createElement('div');\n      // Assigns the elementId to the div.\n      streamDiv.id = elementId;\n      // Takes care of the lateral inversion\n      streamDiv.style.transform = 'rotateY(180deg)';\n      // Adds the div to the container.\n      remoteContainer?.appendChild?.(streamDiv);\n    }\n\n    // setGlobalClient(client);\n\n    client.init(\n      'f00954bc33414730a06ed11c8aa4c139',\n      function () {\n        console.log('kyung', 'client initialized');\n      },\n      function (err) {\n        console.log('kyung', 'client init failed ', err);\n      },\n    );\n\n    // Join a channel\n    client.join(\n      null, //token\n      '123', //channel name\n      null,\n      undefined,\n      (uid: any) => {\n        // console.log(\"kyung\", \"join\");\n        // Initialize the local stream\n        localStream.init(() => {\n          // Play the local stream\n          localStream.play('me');\n          // Publish the local stream\n          client.publish(localStream, handleError);\n        }, handleError);\n      },\n      handleError,\n    );\n\n    // Subscribe to the remote stream when it is published\n    client.on('stream-added', function (evt) {\n      console.log('kyung', 'stream-added');\n      client.subscribe(evt.stream);\n      // 상대방이 대화에 참여했으므로 대기화면 종료\n      setWaiting(false);\n    });\n\n    // Play the remote stream when it is subsribed\n    client.on('stream-subscribed', function (evt) {\n      // console.log(\"kyung\", \"stream-subscribed\");\n      let stream = evt.stream;\n      // setGlobalStream(stream);\n      let streamId = String(stream.getId());\n      // setGlobalStreamID(streamId);\n      addVideoStream(streamId);\n      stream.play(streamId);\n    });\n\n    // Remove the corresponding view when a remote user unpublishes.\n    client.on('stream-removed', function (evt) {\n      // console.log(\"kyung\", \"stream-removed\");\n      let stream = evt.stream;\n      let streamId = String(stream.getId());\n      stream.close();\n      removeVideoStream(streamId);\n      setWaiting(true);\n    });\n    // Remove the corresponding view when a remote user leaves the channel.\n    client.on('peer-leave', function (evt) {\n      // console.log(\"kyung\", \"peer-leave\");\n      client.unpublish(localStream);\n      setWaiting(true);\n    });\n\n    client.on('connection-state-change', function (evt) {\n      // console.log(\"kyung\", \"connection-state-change\");\n      // console.log(\"kyung\", evt.prevState);\n      // console.log(\"kyung\", evt.curState);\n    });\n  }, []);\n\n  const onExit = async () => {\n    await client.leave();\n    client.unpublish(localStream);\n    setWaiting(true);\n  };\n\n  return (\n    <div className=\"callBackground\">\n      {waiting && <WaitingModal />}\n      <div className=\"callContainer\">\n        <div className=\"callBlur\">\n          <div className=\"callHeader\" />\n          <img\n            className=\"callImage\"\n            src=\"https://raw.githubusercontent.com/2donny/devkor-ykring/kyung/client/public/img/download.jpg\"\n            style={style}\n          />\n        </div>\n        {/* <button className=\"callBack\">\n          <AiOutlineArrowLeft size=\"15\" color=\"white\" />\n        </button> */}\n        <div className=\"callName\">양오오니</div>\n\n        <div className=\"callJob\">UX UI 디자이너</div>\n        {finish ? (\n          <button onClick={() => history.push('/call')} className=\"callNew\">\n            다른 친구와 통화하기\n          </button>\n        ) : (\n          <div className=\"callTime\">\n            {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n          </div>\n        )}\n        {finish ? (\n          <button className=\"callFriend\">친구신청</button>\n        ) : (\n          <button className=\"callExit\" onClick={onExit}>\n            <IoCall className=\"callExitIcon\" color=\"white\" size=\"26\" />\n          </button>\n        )}\n\n        <div className=\"callFooter\">\n          <div className=\"callFooterContainer\">\n            <div className=\"callIntro\">\n              재밌는 일 뭐 없나 코시국에 새로운 사람들 다양한 분야 의 사람들과\n              TALK 을 해보고싶어서 가입했습니다. 지금 스타트업을 다니고 있어서\n              관련 업종에 계신 분들과 재밌는 이야기 나눠보고 싶습니다 ㅎㅎ\n            </div>\n            <div className=\"callTitle\">목표/버킷리스트</div>\n            {totalSec < 4 * curSec ? (\n              <div className=\"callContent\">\n                1. 세계일주하고 맛있는 세계음식들 음미해보기!!!!!\n                <br />\n                2. 하루에 신문 1개씩 읽고 , 일기 하루에 한개씩 써서 책으로\n                만들어서 자서전 팔기\n                <br />\n                3. 영어공부/학원 다니기\n                <br /> 4. 학점 A쁠 받기\n              </div>\n            ) : (\n              <div>\n                <br />\n                <br />\n              </div>\n            )}\n\n            <div className=\"callTitle\">Detail</div>\n            {totalSec < 2 * curSec ? (\n              <>\n                <div className=\"callDetailTitles\">\n                  <div>성별:</div>\n                  <div>나이:</div>\n                  <div>학교</div>\n                  <div>MBTI:</div>\n                  <div>위치:</div>\n                  <div>활동이력:</div>\n                </div>\n                <div className=\"callDetailContents\">\n                  <div>여자</div>\n                  <div>20대 초반</div>\n                  <div>고려대학교</div>\n                  <div>ENTP 뜨거운 논쟁의 변론가</div>\n                  <div>서울 성동구</div>\n                  <div>멋쟁이 사자처럼</div>\n                </div>\n              </>\n            ) : (\n              <div>\n                <br />\n                <br />\n              </div>\n            )}\n\n            <div className=\"callTitle\">관심사</div>\n            {4 * totalSec < 3 * curSec ? (\n              <div className=\"callContent\" id=\"last\">\n                #맛집\n              </div>\n            ) : (\n              <div>\n                <br />\n                <br />\n              </div>\n            )}\n          </div>\n        </div>\n        <div id=\"me\"></div>\n        <div id=\"remote-container\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default CallWaitingRoom;\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:80',\n});\n\nexport default axiosInstance;\n","import { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ProfileLocationState } from './types.d';\nimport axiosInstance from '../Client';\nimport { LoginResponse } from '../profile/types';\n\ninterface Props {}\n\nexport default function KakaoRedirect(props: Props) {\n  const location = useLocation<ProfileLocationState>();\n  const history = useHistory();\n\n  useEffect(() => {\n    const { userId, gender, nickname, profile_image_url } = location.state;\n\n    console.log(userId);\n\n    axiosInstance\n      .post<LoginResponse>('/user/login', {\n        userId,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.ok) {\n          // redirect to /call/waiting\n          history.push('/call/waiting', {\n            userId,\n            nickname,\n            gender,\n            profile_image_url,\n          });\n        } else {\n          history.push('/me', {\n            userId,\n            nickname,\n            gender,\n            profile_image_url,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(err);\n      });\n  }, []);\n\n  return null;\n}\n","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\n\ninterface Props {\n  setQuery: React.Dispatch<React.SetStateAction<boolean>>;\n  setChatUserImageList: React.Dispatch<React.SetStateAction<any[]>>;\n  setChatUserList: React.Dispatch<React.SetStateAction<string[]>>;\n  setChatList: React.Dispatch<React.SetStateAction<string[]>>;\n}\nconst GetChattingData = ({\n  setQuery,\n  setChatUserImageList,\n  setChatUserList,\n  setChatList,\n}: Props) => {\n  const accountUrl = 'http://localhost/user/chat';\n  const { isLoading, error, data } = useQuery('GetChattingData', async () => {\n    const response = await axios.get(accountUrl, {\n      headers: {\n        userId: 1859557437,\n      },\n    });\n    // console.log(\"query\", response);\n    return response.data.rooms;\n  });\n\n  //   console.log(\"query\", data);\n\n  if (data?.length === 0) {\n    setChatUserImageList([]);\n    setChatUserList([]);\n    setChatList([]);\n    setQuery(false);\n  }\n\n  return <div></div>;\n};\n\nexport default GetChattingData;\n","import React, { SetStateAction } from 'react';\nimport './SendChat.css';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\nconst SendChat = ({\n  setSendChat,\n}: {\n  setSendChat: React.Dispatch<SetStateAction<boolean>>;\n}) => {\n  const history = useHistory();\n  return (\n    <div className=\"SendChatBackground\">\n      <div className=\"SendChatContainer\">\n        <div className=\"SendChatheader\">\n          <button className=\"SendChatBtn\" onClick={() => setSendChat(false)}>\n            <AiOutlineArrowLeft className=\"SendChatBack\" size=\"17\" />\n          </button>\n          <div onClick={() => history.push('/chat')} className=\"SendChatTitle\">\n            쪽지보내기\n          </div>\n        </div>\n        <input\n          className=\"SendChatInput\"\n          placeholder=\"내용을 입력하세요.\n            매너있는 대화를 진행해주세요.\"\n        />\n        <div>\n          <button className=\"SendChatSend\">쪽지보내기</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SendChat;\n","import React from 'react';\nimport './DetailChat.css';\nimport { IoIosSend } from 'react-icons/io';\nimport { AiOutlineArrowLeft, AiOutlineMore } from 'react-icons/ai';\nimport { useState } from 'react';\nimport SendChat from './SendChat';\n\ninterface Props {\n  setOpenDetailChat: React.Dispatch<React.SetStateAction<boolean>>;\n  selectedUser: any;\n}\n\nconst DetailChat = ({ setOpenDetailChat, selectedUser }: Props) => {\n  const [fromMe, setFromMe] = useState([true, false, true]);\n  const [messages, setMessages] = useState([\n    '참치김밥 무조건 추천추천 안암 올때 연락줘 ~~ 시간 괜찮으면 놀자!',\n    '안녕 ㅎㅎ 반가워!! 마른햇살이 아니구 ㅋㅋㅋㅋ 고른햇살! 거기 진짜 진짜 맛있어 ㅎㅎ',\n    '안녕~~~ 방금 통화한 연대생이야 ㅋㅋㅋ! 아까 알려준 고려대에 김밥 맛집이 어디라고 했지? 나 다음주에 안암가는데 한번 가보려구 ㅎㅎ 이름이 마른햇살이라고 했나?? 기억력이 안좋아서 ㅠ  ',\n  ]);\n  const [time, setTime] = useState(['1분전', '3분전', '5분전']);\n  const [sendChat, setSendChat] = useState(false);\n  return (\n    <div className=\"DetailChatBackground\">\n      <div className=\"DetailChatContainer\">\n        {sendChat ? <SendChat setSendChat={setSendChat} /> : null}\n        <div className=\"DetailChatheader\">\n          <button\n            className=\"DetailChatBtn\"\n            onClick={() => setOpenDetailChat(false)}\n          >\n            <AiOutlineArrowLeft className=\"DetailChatBack\" size=\"17\" />\n          </button>\n          <div className=\"DetailChatOpp\">{selectedUser}</div>\n          <button className=\"DetailChatBtn\" onClick={() => setSendChat(true)}>\n            <IoIosSend className=\"DetailChatSend\" size=\"31\" />\n          </button>\n          <button className=\"DetailChatBtn\">\n            <AiOutlineMore className=\"DetailChatMore\" size=\"31\" />\n          </button>\n        </div>\n        {messages.map((el, idx) => {\n          return (\n            <div className=\"DetailChatBody\">\n              {fromMe[idx] ? (\n                <div className=\"DetailChatFromMe\">보낸쪽지(나)</div>\n              ) : (\n                <div className=\"DetailChatToMe\">받은쪽지({selectedUser})</div>\n              )}\n              <div className=\"DetailChatTime\">{time[idx]}</div>\n              <div className=\"DetailChatMessage\">{el}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default DetailChat;\n","import React from 'react';\nimport { useState } from 'react';\nimport GetChattingData from '../query/GetChattingData';\nimport './Chat.css';\nimport DetailChat from './DetailChat';\n\nconst Chat = () => {\n  const [openDetailChat, setOpenDetailChat] = useState(false);\n  const [query, setQuery] = useState(true);\n  const [chatUserImageList, setChatUserImageList] = useState<any[]>([]);\n  const [chatUserList, setChatUserList] = useState(['유쥬', '누구']);\n  const [chatList, setChatList] = useState(['안녕', '쪽지를 보내보세요!']);\n  const [selectedUser, setSelectedUser] = useState('');\n\n  return (\n    <div className=\"ChattingBackground\">\n      <div className=\"ChattingContainer\">\n        {query ? (\n          <GetChattingData\n            setQuery={setQuery}\n            setChatUserImageList={setChatUserImageList}\n            setChatUserList={setChatUserList}\n            setChatList={setChatList}\n          />\n        ) : null}\n        {openDetailChat ? (\n          <DetailChat\n            setOpenDetailChat={setOpenDetailChat}\n            selectedUser={selectedUser}\n          />\n        ) : null}\n        <div className=\"chat\">쪽지</div>\n        <img\n          className=\"chatImage\"\n          src=\"https://raw.githubusercontent.com/2donny/devkor-ykring/kyung/client/public/img/chat.png\"\n        />\n        <div className=\"chatExplain\">\n          <strong>쪽지하기</strong> 통화가 즐거우셨나요? 친구신청을 통해 친구가\n          되었어요! 쪽지를 통해 서로 소통 해보세요!😀\n        </div>\n        {chatUserList.length === 0 ? (\n          <div className=\"chatZero\">\n            쪽지가 없어요 :(\n            <br /> 7분 통화 후 마음에 드는 친구에게 친구신청을 해보세요!\n          </div>\n        ) : (\n          chatUserList.map((el, idx) => {\n            return (\n              <button\n                className=\"chatUser\"\n                onClick={() => {\n                  setSelectedUser(el);\n                  setOpenDetailChat(true);\n                }}\n              >\n                <img\n                  className=\"chatUserImage\"\n                  src=\"https://raw.githubusercontent.com/2donny/devkor-ykring/kyung/client/public/img/user.png\"\n                />\n                <div vertical-align=\"true\">\n                  <div className=\"chatUserName\">{el}</div>\n                  <div className=\"chatUserChat\">{chatList[idx]}</div>\n                </div>\n              </button>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect } from 'react';\nimport './MyProfile.css';\n\nfunction MyProfile() {\n  const [reqFriend, setReqFriend] = useState([{ name: '잔나비' }]);\n\n  const removeReqFriend = (id: any) => {\n    setReqFriend(\n      reqFriend.filter((reqFriends: any) => {\n        return reqFriends.id !== id;\n      }),\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"titles\">마이 페이지</h1>\n      <div className=\"text1\">\n        <div className=\"textintext\">\n          친구수락 친구요청이 왔어요 친구 수락을 하시면 쪽지탭에서 쪽지를\n          진행하실 수 있어요! 쪽지를 통해 더 친해져 볼까요?\n        </div>\n      </div>\n      <div className=\"smalltitle1\">친구신청</div>\n      <div className=\"reqfriend\">\n        <div className=\"reqimg\"></div>\n        <div className=\"reqname\">잔나비</div>\n        <button className=\"reqaccept\">수락</button>\n        <button className=\"reqreject\">거절</button>\n      </div>\n      <div className=\"reqfriend3\">\n        <div className=\"reqimg3\"></div>\n        <div className=\"reqname\">잔나비</div>\n        <button className=\"reqaccept\">수락</button>\n        <button className=\"reqreject\">거절</button>\n      </div>\n      <div className=\"smalltitle2\">나의 친구</div>\n      <div className=\"reqfriend2\">\n        <div className=\"reqimg2\"></div>\n        <div className=\"reqname\">준호</div>\n        <button className=\"message\">쪽지하기</button>\n      </div>\n    </div>\n  );\n}\nexport default MyProfile;\n","import { Route, Switch } from 'react-router-dom';\nimport useLogin from './hooks/useLogin';\nimport Layout from './components/Layout';\nimport Login from './components/auth/Login';\nimport { GlobalStyles } from './styles/styles';\nimport Profile from './components/profile/Profile';\nimport Call from './components/call/Call';\nimport CallWaitingRoom from './components/call/CallWatingRoom';\nimport KakaoRedirect from './components/auth/KakaoRedirect';\nimport Chat from './components/chat/Chat';\nimport MyProfile from './components/myprofile/MyProfile';\n\nfunction App() {\n  return (\n    <Layout>\n      <GlobalStyles />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Login />\n        </Route>\n\n        <Route path=\"/me\">\n          <Profile />\n        </Route>\n\n        <Route path=\"/auth/kakao\">\n          <KakaoRedirect />\n        </Route>\n\n        <Route path=\"/call\" exact>\n          <Call />\n        </Route>\n\n        <Route path=\"/chat\" exact>\n          <Chat />\n        </Route>\n\n        <Route path=\"/my-profile\" exact>\n          <MyProfile />\n        </Route>\n\n        <Route path=\"/call/waiting\">\n          <CallWaitingRoom />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}